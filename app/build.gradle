apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: "org.jlleitschuh.gradle.ktlint"
apply plugin: 'kotlin-kapt'
apply plugin: 'com.getkeepsafe.dexcount'

def env = "env"
android {
  compileSdkVersion versions.compileSdkVersion
  dataBinding.enabled = true
  defaultConfig {
    applicationId application.id
    minSdkVersion versions.minSdkVersion
    targetSdkVersion versions.targetSdkVersion
    archivesBaseName = "${project.name}-${versionName}"
    versionCode 1
    versionName "1.0"
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    vectorDrawables.useSupportLibrary = true
  }
  dexOptions {
    preDexLibraries "true" != System.getenv("CI")
  }
  buildTypes {
    release {
      minifyEnabled true
      shrinkResources true
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
  lintOptions {
    lintConfig file('lint.xml')
    textReport true
    textOutput 'stdout'
  }

  flavorDimensions env

  productFlavors {
    development {
      dimension env
      applicationId application.id + '.dev'
      testApplicationId application.id + 'dev.test'
      // Specify devel base URL. Always end it with the trailing slash because the HTTP client
      // expects it.
      def baseUrl = "http://scan-mock.com/"
      buildConfigField "String", "BASE_URL", "\"${baseUrl}\""
    }

    production {
      dimension env
    }
  }
}

kapt {
  useBuildCache = true
}

ktlint {
  version = versions.ktlint
  android = true
  reporter = "checkstyle"
  ignoreFailures = false
}

dependencies {
  api project(':data')
  implementation deps.kotlin.stdLib.jre
  // Support library
  implementation deps.support.design
  implementation deps.support.recyclerView
  implementation deps.support.customtabs
  implementation deps.support.cardview
  implementation deps.support.constraintLayout
  implementation deps.ktx
  // Firebase
  implementation deps.firebase.uiAuth
  implementation deps.firebase.crash
  // Google maps
  implementation deps.map.google
  //implementation deps.map.utils
  implementation deps.glide.core
  implementation deps.glide.okhttp3
  // Annotation processors
  kapt deps.databinding.compiler
  kapt deps.dagger.compiler

  kapt deps.dagger.processor
  kapt deps.lifecycle.compiler
  kapt deps.glide.compiler
  debugImplementation deps.leakcanary.op
  releaseImplementation deps.leakcanary.noOp
  // Tests
  testImplementation deps.junit
}

// MUST BE AT THE BOTTOM
apply plugin: 'com.google.gms.google-services'
